#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#undef ZMK_MOUSE_DEFAULT_MOVE_VAL
#undef ZMK_MOUSE_DEFAULT_SCRL_VAL
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#define COLEMAK 0
#define MEDIA   1
#define SYMBOLS 2
#define EXTEND  3
#define NAV     4
#define FUNC    5
#define TMUX    6
#define SELECT1 7
#define SELECT2 8


#define KEYS_LEFT     0  1  2  3  4  5 13 14 15 16 17 18 28 29 30 31 32 33 // left-hand keys
#define KEYS_RIGHT    7  8  9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 // right-hand keys
#define KEYS_THUMBS  42 43 44 45 46 47                                     // thumb keys
#define KEYS_5WAY     6 19 20 21 35                                        // five-way switch
#define KEY_ENCODER  34                                                    // push on rotary encoder

// mouse movement and scroll
#define U_MS_SLOW_SPEED 100
#define U_MS_U &ms_up
#define U_MS_D &ms_down
#define U_MS_L &ms_left
#define U_MS_R &ms_right
//#define U_MS_U &mmv MOVE_UP
//#define U_MS_D &mmv MOVE_DOWN
//#define U_MS_L &mmv MOVE_LEFT
//#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

#define SELECT &select SELECT1 COLEMAK
#define SEL1_U &sel1_u SELECT2
#define SEL1_D &sel1_d SELECT2
#define SEL1_L &sel1_l SELECT2
#define SEL1_R &sel1_r SELECT2

#define EXT_CAPS &mo_caps EXTEND 0
#define SYMB_ALTGR &mo_sk SYMBOLS RALT
#define SLASH_DIRS &ht_dirs 0 SLASH
#define DOT_MACROS &ht_sentence 0 0
#define MEDIA_TAB  &lt MEDIA TAB
#define MEDIA_ENT &lt MEDIA ENTER
#define EXT_TAB &lt EXTEND TAB
#define NAV_ADL     &nav_adl COLEMAK 0      // layer parameter is the layer to go back to after release
#define NAV_ADL_MD  &nav_adl MEDIA 0        // layer parameter is the layer to go back to after release
#define NAV_ADL_SYM &nav_adl SYMBOLS 0      // layer parameter is the layer to go back to after release
#define FUNC_ADR &mo_adr FUNC 0
#define TMUX_SPC &lt TMUX SPC
#define LCTRL_LGUI &mt LCTRL LGUI
#define TAB_L &kp LC(LA(PG_UP))
#define TAB_R &kp LC(LA(PG_DN))

/* Application shortcuts */
#define APP_FFOX &kp LC(LG(W))
#define APP_FILE &kp LC(LG(F))
#define APP_CODE &kp LC(LG(L))
#define APP_JOPL &kp LC(LG(J))
#define APP_SIGN &kp LC(LG(A))
#define APP_SKYP &kp LC(LG(Y))
#define APP_SLAC &kp LC(LG(S))
#define APP_BTRM &kp LC(LG(B))
#define APP_NTRM &kp LC(LG(T))
#define APP_SCRP &kp LC(LG(X))
#define APP_TRSM &kp LC(LG(O))
#define GNOME &kp LC(BSPC)

/* Dead Antecedents - from the Misc. list */
#define DA_ENDM OUT
#define DA_DQT2LTGT EXSEL
#define DA_LTGT2DQT OPER
#define DA_ADDR SEPARATOR


/* Awkward layer lock */
/* Lock: press lock key, release mo layer, release lock */
/* Unlock: tap lock key */
#define LOCK_SYM &llock SYMBOLS
#define LOCK_EXT &llock EXTEND
#define LOCK_MED &llock MEDIA

#include "combos.dtsi"
#include "adaptive_keys.dtsi"
#include "leader_keys.dtsi"
#include "macros_help.dtsi"
#include "macros_private.dtsi"
#include "macros_select.dtsi"
#include "macros_tmux.dtsi"

/ {
    macros {
        // Single Alt-tab to swap to the previous window instead of cycling through
        prv_wnd: previous_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_press &kp LALT>,
                <&macro_tap &kp TAB>,
                <&macro_release &kp LALT>;
        };
        // Layer lock, sort-of
        llock: layer_lock {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_tap &tog MACRO_PLACEHOLDER>;
        };
        macro_qu: macro_qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp Q>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp U>
                ;
        };
        parent_dir: parent_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <1>;
            bindings = <&macro_tap &kp DOT &kp DOT &kp SLASH>;
        };
        home_dir: home_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <1>;
            bindings = <&macro_tap &kp TILDE &kp SLASH>;
        };
        new_sentence: new_sentence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DOT &kp SPACE>
                , <&sk LSHFT>
                ;
        };
        workspace: workspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <1>;
            bindings
                = <&macro_tap &kp TILDE &kp SLASH>
                , <&macro_tap &kp W &kp O &kp R &kp K &kp S &kp P &kp A &kp C &kp E>
                , <&macro_tap &kp SLASH>
                ;
        };
        grv_block: grv_block {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp GRAVE &kp GRAVE &kp GRAVE>;
        };
        vimcmd: vimcmd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp ESC &kp COLON>;
        };
        // Symbols macros
        c_comment: c_comment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <1>;
            bindings
                = <&macro_tap &kp SLASH &kp STAR &kp SPACE &kp SPACE &kp STAR &kp SLASH>
                , <&macro_tap &kp LEFT &kp LEFT &kp LEFT>
                ;
        };
        greater_equal: greater_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp GT &kp EQUAL>;
        };
        greater_equal_spaces: greater_equal_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap  &kp SPC &kp GT &kp EQUAL &kp SPC>;
        };
        less_equal: less_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LT &kp EQUAL>;
        };
        less_equal_spaces: less_equal_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp LT &kp EQUAL &kp SPC>;
        };
        not_equal: not_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp EXCL &kp EQUAL>;
        };
        not_equal_spaces: not_equal_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp EXCL &kp EQUAL &kp SPC>;
        };
        equal_spaces: equal_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_release &kp LSHFT>,
                <&macro_tap &kp SPC &kp EQUAL &kp SPC>;
        };
        equal_equal: equal_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp EQUAL &kp EQUAL>;
        };
        equal_equal_spaces: equal_equal_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp EQUAL &kp EQUAL &kp SPC>;
        };
        amps_spaces: amps_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp AMPS &kp SPC>;
        };
        amps_amps: amps_amps {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp AMPS &kp AMPS>;
        };
        amps_amps_spaces: amps_amps_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp AMPS &kp AMPS &kp SPC>;
        };
        lpar_rpar: lpar_rpar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LPAR &kp RPAR &kp LEFT>;
        };
        rpar_newline: rpar_newline {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RPAR &kp SEMI &kp ENTER>;
        };
        brc_lri: braces_left_right_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBRC &kp RBRC &kp LEFT>;
        };
        brc_lr: braces_left_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBRC &kp RBRC>;
        };
        lbkt_rbkt: lbkt_rbkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBKT &kp RBKT &kp LEFT>;
        };
        pipe_pipe: pipe_pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp PIPE &kp PIPE>;
        };
        pipe_pipe_spaces: pipe_pipe_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp PIPE &kp PIPE &kp SPC>;
        };
        sqts_n_ins: squotes_normal_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SQT &kp SQT &kp LEFT>;
        };
        sqt_apos: squotes_apostrophe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                    <&macro_tap &sk RALT &kp N0>;
        };
        sqt_quote: squotes_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                    <&macro_tap &kp SQT>;
        };
        sqts_smart_ins: squotes_smart_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                    <&macro_press &kp RALT>,
                    <&macro_tap &kp N9 &kp N0>,
                    <&macro_release &kp RALT>,
                    <&macro_tap &kp LEFT>;
        };
        dqts_n_ins: dquotes_normal_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DQT &kp DQT &kp LEFT>;
        };
        dqts_smart_ins: dquotes_smart_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                    <&macro_press &kp RALT>,
                    <&macro_tap &kp LPAR &kp RPAR>,
                    <&macro_release &kp RALT>,
                    <&macro_tap &kp LEFT>;
        };
        dqts_glmts_ins: dquotes_guillemet_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                    <&macro_tap &kp LBKT &sk RALT &kp RBKT>,
                    <&macro_tap &kp LEFT>;
        };
        lt_gt_ins: less_greater_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LT &kp GT &kp LEFT>;
        };

        nobreakcolon: nobreakcolon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &sk RALT &kp SPC &kp COLON &kp SPC>;
        };
        nobreaksemi: nobreaksemi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &sk RALT &kp SPC &kp SEMI &kp SPC>;
        };
        nobreakminus: nobreakminus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &sk RALT &kp MINUS>;
        };

        // Alt-tab simulation
        alttab: alt_tab_begin {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings =
                    <&macro_press &kp LALT>,
                    <&macro_tap &kp TAB &to SELECT2>;
         };
        // Alt-esc simulation
        altesc: alt_esc_begin {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings =
                    <&macro_press &kp LALT>,
                    <&macro_tap &kp ESC &to SELECT2>;
         };
        // macro to activate NAV, then release ALT and move to layer in parameter 1 on key release
        nav_alttab: momentary_release_alt {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_press &mo NAV>
                     , <&macro_pause_for_release>
                     , <&macro_release &kp LALT>
                     , <&macro_param_1to1>, <&macro_tap &to MACRO_PLACEHOLDER>;
        };

        
    };

    behaviors {
        hrl: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_RIGHT KEYS_THUMBS KEYS_5WAY>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hrr: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_LEFT KEYS_THUMBS KEY_ENCODER>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        mo_capsword: mo_capsword {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&caps_word>;
        };

        mo_caps: mo_caps {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&td_caps>;
        };

        mo_sk: mo_sticky {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <280>;
            bindings = <&mo>, <&sk>;
        };

        nav_adl: mo_adaptive_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <280>;
            bindings = <&nav_alttab>, <&ad_left>;
        };
        mo_adr: mo_adaptive_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <280>;
            bindings = <&mo>, <&ad_right>;
        };

        ht_dirs: ht_dirs {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&dir_hup>, <&kp>;
        };

        ht_sentence: ht_sentence {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&sentence_wksp>, <&dot_tld>;
        };

        ht_sqts: ht_singlequotes {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            bindings = <&sqts_ins>, <&sqts_sqt>;
        };
        sqts_ins: single_quote_inside {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sqts_n_ins>, <&sqts_smart_ins>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sqts_sqt: single_quote_aportrophe {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sqt_quote>, <&sqt_apos>;
            mods = <(MOD_RALT)>;
        };
        ht_dqts: ht_doublequote {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            bindings = <&dqts_ins>, <&kp>;
        };
        dqts_ins: double_quote_inside {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&dqts_plain_or_guillmets_ins>, <&dqts_smart_ins>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dqts_plain_or_guillmets_ins: double_quote_plain_or_guillemets_inside {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&dqts_n_ins>, <&dqts_glmts_ins>;
            mods = <(MOD_RALT)>;
            keep-mods = <(MOD_RALT)>;
        };
        colon_nobreak: colon_no_break {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&nobreakcolon>;
            mods = <(MOD_RALT)>;
        };
        semi_nobreak: semi_no_break {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&nobreaksemi>;
            mods = <(MOD_RALT)>;
        };
        minus_nobreak: minus_no_break {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&nobreakminus>;
            mods = <(MOD_RALT)>;
        };

        td_boot: td_bootloader {
            compatible = "zmk,behavior-tap-dance";
            display-name = "BOOT";
            #binding-cells = <0>;
            bindings = <&none>, <&bootloader>;
        };

        td_btclr: td_bluetooth_clear {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&none>, <&bt BT_CLR_ALL>;
        };

        td_extcaps: tap_dance_ext_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo_capsword EXTEND 0>, <&kp CAPSLOCK>;
        };

        td_caps: tap_dance_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&caps_word>, <&kp CAPSLOCK>;
        };

        comm_grv: comma_grave {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&comm_grv_ht 0 GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comm_grv_ht: comma_grave_ht {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            bindings = <&grv_block>, <&kp>;
        };

        dot_tld: dot_tilde {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        at_caret: at_caret {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp CARET>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dlr_prc: dollar_percent {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR>, <&kp PERCENT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        srch_prv: search_prev {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(F3)>, <&kp LC(F8)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        srch_nxt: search_next {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp F3>, <&kp F8>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dir_hup: dir_home_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&home_dir>, <&parent_dir>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sentence_wksp: newsentence_workspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&new_sentence>, <&workspace>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Symbols mod-morphs and hold-taps
        ht_gt: ht_gt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&greater_equal_mm>, <&gt_sqt>;
        };
        gt_sqt: greaterthan_singlequote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp GT>, <&kp SQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        greater_equal_mm: greater_equal_mm {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&greater_equal>, <&greater_equal_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_lt: ht_lt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&less_equal_mm>, <&lt_dqt>;
        };
        lt_dqt: lessthan_doublequote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LT>, <&kp DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        less_equal_mm: less_equal_mm {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&less_equal>, <&less_equal_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_pipe: ht_pipe {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&pipe_mm>, <&pipe_quest>;
        };
        pipe_mm: pipe_mm {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&pipe_pipe>, <&pipe_pipe_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        pipe_quest: pipe_quest {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_equl: ht_equal {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&equal_equal_mm>, <&equal_mm>;
        };
        equal_mm: equal_mm {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&equal_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        equal_equal_mm: equal_equal_morph{
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&equal_equal>, <&equal_equal_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_amps: ht_amps {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&amps_amps_mm>, <&amps_mm>;
        };
        amps_mm: amps_mm {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&amps_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        amps_amps_mm: amps_amps_morph{
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&amps_amps>, <&amps_amps_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_excl: ht_exclam {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&not_equal_mm>, <&excl_bslsh>;
        };
        excl_bslsh: exclam_bslash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp BACKSLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        not_equal_mm: not_equal_morph{
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&not_equal>, <&not_equal_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_lpar: ht_lpar {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&lpar_rpar>, <&kp>;
        };
        ht_rpar: ht_rpar {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&rpar_newline>, <&kp>;
        };
        ht_lbrc: ht_lbrc {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&brc_lri>, <&mm_lbrc>;
        };
        mm_lbrc: mm_lbrc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&td_brc>, <&kp RBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        td_brc: tap_dance_braces {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LBRC>, <&brc_lr>;
        };
        ht_lbkt: ht_lbkt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&lbkt_rbkt>, <&kp>;
        };
        // Mod-morphs on HRM on Symbols
        hrl_dot: home_row_left_dot {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&dot_comma>;
            hold-trigger-key-positions = <KEYS_RIGHT KEYS_THUMBS KEYS_5WAY>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
        ht_hash: ht_hash {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&c_comment>, <&kp>;
        };
        hrr_slsh: home_row_right_slash {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&slsh_bslsh>;
            hold-trigger-key-positions = <KEYS_LEFT KEYS_THUMBS KEY_ENCODER>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
        hrr_star: home_row_right_star {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&star_col>;
            hold-trigger-key-positions = <KEYS_LEFT KEYS_THUMBS KEY_ENCODER>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COMMA>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slsh_bslsh: slash_bslash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        star_col: star_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp STAR>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ms_up: mouse_up_dualspeed {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&ms_up_sc>, <&mmv MOVE_Y(-U_MS_SLOW_SPEED)>;
            mods = <(MOD_LALT)>;
        };
        ms_up_sc: mouse_up_scroll {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_UP>, <&msc SCRL_UP>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ms_left: mouse_left_dualspeed {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&ms_left_sc>, <&mmv MOVE_X(-U_MS_SLOW_SPEED)>;
            mods = <(MOD_LALT)>;
        };
        ms_left_sc: mouse_left_scroll {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_LEFT>, <&msc SCRL_LEFT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ms_right: mouse_right_dualspeed {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&ms_right_sc>, <&mmv MOVE_X(U_MS_SLOW_SPEED)>;
            mods = <(MOD_LALT)>;
        };
        ms_right_sc: mouse_right_scroll {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_RIGHT>, <&msc SCRL_RIGHT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ms_down: mouse_down_dualspeed {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&ms_down_sc>, <&mmv MOVE_Y(U_MS_SLOW_SPEED)>;
            mods = <(MOD_LALT)>;
        };
        ms_down_sc: mouse_down_scroll {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_DOWN>, <&msc SCRL_DOWN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "COLEMK";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │MD/ESC│  Q  │  W  │  F  │  P  │  B  │                ┃  ↑  ┃         │  J  │  L  │  U  │  Y  │  ;  │ BKSP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │EX/TAB│  A  │  R  │  S  │  T  │  G  │          ┃  ←  ┃enter┃  →  ┃   │  M  │  N  │  E  │  I  │  O  │MD/ENT│
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │CTL/SP│  Z  │  X  │  C  │  D  │  V  │ ┃MUTE┃         ┃  ↓  ┃         │  K  │  H  │ , ` │ . ~ │  /  │Alt/' │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │ NAV │ SFT │ EXT │                        │ SYM │ SPC │ Fn  │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&kp ESC    &kp Q        &kp W        &kp F         &kp P         &kp B                           &kp UP                 &kp J        &kp L         &kp U        &kp Y        &kp SEMI    &kp BSPC
MEDIA_TAB  &hrl LGUI A  &hrl LALT R  &hrl LSHFT S  &hrl LCTRL T  &kp G                 &kp LEFT  &kp ENTER  &kp RIGHT   &kp M        &hrr LCTRL N  &hrr LSHFT E &hrr LALT I  &hrr LGUI O MEDIA_ENT
LCTRL_LGUI &kp Z        &kp X        &kp C         &kp D         &kp V      &kp C_MUTE           &kp DOWN               &kp K        &kp H         &comm_grv    DOT_MACROS   SLASH_DIRS  &mt LALT SQT
                                                  NAV_ADL  &kp LSHIFT  EXT_CAPS                                 SYMB_ALTGR  TMUX_SPC  FUNC_ADR
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        media_layer {
            display-name = "MEDIA";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │ ESC  │MUTE │VOL- │VOL+ │ MIC │ F5  │                ┃ s↑  ┃         │     │ mL  │ m↑  │ mR  │     │ PGUP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │BRI- │BRI+ │DISP │     │          ┃ s←  ┃enter┃ s→  ┃   │ZOOM+│ m←  │ m↓  │ m→  │  ↑  │ PGDN │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │PLAY │STOP │PREV │NEXT │     │ ┃MUTE┃         ┃ s↓  ┃         │ZOOM-│ mM  │     │  ←  │  ↓  │  →   │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │HOME │ SPC │ END │I
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&kp ESC    &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &kp F20       &kp F5                        U_WH_U             LOCK_MED      &mkp LCLK    U_MS_U      &mkp RCLK    &none       &kp PG_UP
EXT_TAB    &none        &kp C_BRI_DN &kp C_BRI_UP  &none         &none                 U_WH_L  &kp ENTER  U_WH_R  &kp LC(PLUS)  U_MS_L       U_MS_D      U_MS_R       &kp UP      &kp PG_DN
&none      &kp C_PLAY   &kp C_STOP   &kp C_PREV    &kp C_NEXT    &none      &kp SPACE          U_WH_D             &kp LC(MINUS) &mkp MCLK    &none       &kp LEFT     &kp DOWN    &kp RIGHT
                                                  NAV_ADL_MD  &trans  &kp LALT                                  &kp HOME   &kp SPC  &kp END
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        symbols_layer {
            display-name = "SYMBOLS";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │  x   │ > ' │  7  │  8  │  9  │ @ ^ │                ┃  ↑  ┃         │  &  │  (  │  )  │  {  │  }  │ BKSP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ TAB  │  .  │  1  │  2  │  3  │  #  │          ┃  ←  ┃enter┃  →  ┃   │  =  │  -  │  +  │  /  │  *  │ ENT  │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │ < " │  4  │  5  │  6  │ $ % │ ┃MUTE┃         ┃  ↓  ┃         │ ! \ │  _  │  [  │  ]  │ | ? │ Comp │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │Sft/0│     │                        │     │ SPC │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&kp X      &ht_gt 0 0    &kp N7       &kp N8        &kp N9        &at_caret                        &kp UP                 &ht_amps 0 0 &ht_lpar 0 LPAR &ht_rpar 0 RPAR  &ht_lbrc 0 0 &kp RBRC    &kp BSPC
&kp TAB    &hrl_dot LGUI 0 &hrl LALT N1 &hrl LSHFT N2 &hrl LCTRL N3 &ht_hash 0 HASH      &kp LEFT  &kp ENTER  &kp RIGHT   &ht_equl 0 0 &hrr LCTRL MINUS &hrr LSHFT PLUS &hrr_slsh LALT 0 &hrr_star LGUI 0 &kp ENTER
LOCK_SYM   &ht_lt 0 0    &kp N4       &kp N5        &kp N6        &dlr_prc    &kp SPACE            &kp DOWN               &ht_excl 0 0 &kp UNDER     &ht_lbkt 0 LBKT    &kp RBKT     &ht_pipe 0 0 &kp RGUI
                                                  NAV_ADL_SYM  &mt LSHIFT N0 &trans                                   &trans  &kp SPC  &trans
            >;
            sensor-bindings = <&inc_dec_kp TAB LS(TAB)>;
        };

        extend_layer {
            display-name = "EXTEND";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │ ESC  │  Q  │  W  │  F  │  P  │  B  │                ┃  ↑  ┃         │  J  │  L  │  U  │  Y  │  ;  │ BKSP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ TAB  │  A  │  R  │  S  │  T  │  G  │          ┃  ←  ┃enter┃  →  ┃   │  M  │  N  │  E  │  I  │  O  │ ENT  │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │CTL/SP│  Z  │  X  │  C  │  D  │  V  │ ┃MUTE┃         ┃  ↓  ┃         │  K  │  H  │ , ` │ . ~ │  /  │Alt/' │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │ SPC │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &kp ESC      &kp LC(W)    &kp LC(F)     &none         &kp INS                         &kp UP                 &kp HOME     &kp PGUP      &kp UP       &kp PGDN   &none       &kp DEL
&prv_wnd    &sk LGUI     &sk LALT     &sk LSHFT     &sk LCTRL     SELECT                &kp LEFT  &kp ENTER  &kp RIGHT   &kp END      &kp LEFT      &kp DOWN     &kp RIGHT  &kp BSPC    &kp ENTER
LOCK_EXT    &kp LC(Z)    &kp LC(X)    &kp LC(C)     &kp LC(V)     &kp LC(Y)  &kp LS(SPACE)        &kp DOWN               &kp LS(TAB)  &kp TAB       &none        &kp LC(BSPC) &kp DEL   GNOME
                                                  &trans   &trans  &trans                                     &trans   &kp SPC  &trans
            >;
            sensor-bindings = <&inc_dec_kp LS(LG(LBKT)) LS(LG(RBKT))>;  // External volume on Hifiberry
        };

        nav_layer {
            display-name = "NAV";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │A-ESC │Trsm │Ffox │Files│CodeL│Jopln│                ┃  ↑  ┃         │     │Alt-1│Alt-2│Alt-3│Alt-4│      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │A-TAB │Signl│Skype│Slack│Build│NTerm│          ┃  ←  ┃enter┃  →  ┃   │     │Wksp1│Wksp2│Wkrp3│Wksp4│C-PGUP│
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │ScrpB│     │TCopy│TPast│     │ ┃MUTE┃         ┃  ↓  ┃         │     │T Lft│T Rgt│Srch+│Srch-│C-PGDN│
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │Alt ←│     │Alt →│
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&altesc     APP_TRSM     APP_FFOX     APP_FILE      APP_CODE      APP_JOPL                        &kp UP                 &none      &kp LA(N1)    &kp LA(N2)   &kp LA(N3) &kp LA(N4)  &none
&alttab     APP_SIGN     APP_SKYP     APP_SLAC      APP_BTRM      APP_NTRM              &kp LEFT  &kp ENTER  &kp RIGHT   &none      &kp LG(F1)    &kp LG(F2)   &kp LG(F3) &kp LG(F4)  &kp LC(PGUP)
&none       APP_SCRP     &none        &kp LC(LS(C)) &kp LC(LS(V)) &none      &kp C_MUTE           &kp DOWN               &none      TAB_L         TAB_R        &srch_nxt  &srch_prv   &kp LC(PGDN)
                                                  &trans   &trans  &trans                                     &kp LA(LEFT) &kp SPC &kp LA(RIGHT)
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        func_layer {
            display-name = "FUNC";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │RESET │     │ F7  │ F8  │ F9  │ F12 │                ┃  ↑  ┃         │BTrst│ BT1 │ BT2 │ BT3 │ BT4 │RESET │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ BOOT │     │ F1  │ F2  │ F3  │ F11 │          ┃  ←  ┃enter┃  →  ┃   │ RGB │Bri- │Bri+ │     │     │ BOOT │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │ F4  │ F5  │ F6  │ F10 │ ┃MUTE┃         ┃  ↓  ┃         │SLEEP│     │     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&sys_reset  &none        &kp F7       &kp F8        &kp F9        &kp F12                       &rgb_ug RGB_BRI        &td_btclr       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &sys_reset
&td_boot    &none        &kp F1       &kp F2        &kp F3        &kp F11             &none     &kp ENTER  &none       &rgb_ug RGB_TOG &rgb_ug RGB_BRD &rgb_ug RGB_BRI        &none        &none        &td_boot
&none       &none        &kp F4       &kp F5        &kp F6        &kp F10  &kp LSFT             &rgb_ug RGB_BRD       &kp C_SLEEP     &none        &none        &none        &none        &none
                                                  &trans   &trans  &trans                                     &trans   &trans  &trans
            >;
            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        tmux_layer {
            display-name = "TMUX";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │      │     │Lst W│     │     │     │                ┃  ↑  ┃         │     │Mv L │ Up  │Mv R │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │Rload│     │     │     │          ┃  ←  ┃     ┃  →  ┃   │     │ Prv │ Dwn │ Nxt │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ Zoom │P Exp│     │Crt W│     │     │ ┃    ┃         ┃  ↓  ┃         │     │CopyM│     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &none        &tm_lsw      &none         &none         &none                         &tm_cup                 &tm_j    &tm_l    &tm_u     &tm_y     &none     &none
&none       &kp LGUI     &tm_rcnf     &kp LALT      &kp LCTL      &none               &tm_clft  &none       &tm_crght   &tm_m    &tm_n    &tm_e     &tm_i     &none     &none
&trans      &tm_z        &none        &tm_cw        &none         &none  &none                  &tm_cdn                 &none    &tm_cm   &none     &none     &none     &none
                                                  &none    &trans    &none                                           &none   &none  &none
            >;
            sensor-bindings = <&rgb_encoder>;
        };

        select1_layer {
            display-name = "SLCT1";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │      │     │     │     │     │     │                ┃  ↑  ┃         │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │          ┃  ←  ┃     ┃  →  ┃   │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │ ┃    ┃         ┃  ↓  ┃         │     │     │     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &none        &none        &none         &none         &none                         &none                   &none    &none    SEL1_U    &none     &none     &none
&none       &none        &none        &none         &none         &none               &none     &none       &none       &none    SEL1_L   SEL1_D    SEL1_R    &none     &none
&none       &none        &none        &none         &none         &none  &none                  &none                   &none    &none    &none     &none     &none     &none
                                                  &none   &none  &none                                           &none   &none  &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        select2_layer {
            display-name = "SLCT2";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │      │     │     │     │     │     │                ┃  ↑  ┃         │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │          ┃  ←  ┃     ┃  →  ┃   │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │ ┃    ┃         ┃  ↓  ┃         │     │     │     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&kp ESC     &none        &none        &none         &none         &none                         &none                   &none    &none    &sel2_u   &none     &none     &none
&kp TAB     &none        &none        &none         &none         &none               &none     &none       &none       &none    &sel2_l  &sel2_d   &sel2_r   &none     &none
&none       &none        &none        &none         &none         &none  &none                  &none                   &none    &none    &none     &none     &none     &none
                                                  &none   &none  &none                                           &none   &none  &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
/*
        none_layer {
            display-name = "NONE";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │      │     │     │     │     │     │                ┃  ↑  ┃         │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │          ┃  ←  ┃     ┃  →  ┃   │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │ ┃    ┃         ┃  ↓  ┃         │     │     │     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &none        &none        &none         &none         &none                         &none                   &none    &none    &none     &none     &none     &none
&none       &none        &none        &none         &none         &none               &none     &none       &none       &none    &none    &none     &none     &none     &none
&none       &none        &none        &none         &none         &none  &none                  &none                   &none    &none    &none     &none     &none     &none
                                                  &none   &none  &none                                           &none   &none  &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
*/
    };
};
